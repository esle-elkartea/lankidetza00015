package net.idtoki.adimde.manager;

import org.apache.torque.TorqueException;
import org.apache.torque.util.Criteria;

import com.workingdogs.village.DataSetException;

import net.idtoki.adimde.model.ComposicionesPeer;
import net.idtoki.adimde.model.MaterialesPeer;
import net.idtoki.adimde.model.OperariosPeer;
import net.idtoki.adimde.model.PartesPeer;
import net.idtoki.adimde.model.PerfilesPeer;
import net.idtoki.adimde.model.PerfilturnoPeer;
import net.idtoki.adimde.model.ProduccionesPeer;
import net.idtoki.adimde.model.ProductosPeer;
import net.idtoki.adimde.model.TurnosPeer;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Oct 26 17:10:22 CEST 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class ProduccionesManager
    extends BaseProduccionesManager
{


//Borrado de un elemento
	public static boolean borraProducciones(int idBorrar) {

		Criteria c=new Criteria();
		c.add(ProduccionesPeer.IDPRODUCCION, idBorrar);
		boolean bRet = false;
		try {
			ProduccionesPeer.doDelete(c);
			bRet = true;
		} catch (TorqueException e) {
			logger.info("No se ha podido borrar en la tabla Producciones");
			e.printStackTrace();
			bRet = false;
		}
		return bRet;
	}
	
	public static double getCosteMaterialesProducciones(int idProduccion) throws TorqueException,DataSetException
	{
		Criteria c=new Criteria();
		c.add(ProduccionesPeer.IDPRODUCCION,idProduccion);
		c.addJoin(ProductosPeer.IDPRODUCCION,ProduccionesPeer.IDPRODUCCION);
		c.addJoin(ProductosPeer.IDPRODUCTO,ComposicionesPeer.IDPRODUCTO);
		c.addJoin(MaterialesPeer.IDMATERIAL,ComposicionesPeer.IDMATERIAL);		
		c.addSelectColumn("SUM(" + MaterialesPeer.COSTE + "*" + ComposicionesPeer.UNIDADES + ")");
		java.util.List result = MaterialesPeer.doSelectVillageRecords(c);
		com.workingdogs.village.Record record = (com.workingdogs.village.Record) result.get(0);
		return record.getValue(1).asDouble();			
	}	
	
	public static double getManoObraProducciones(int idProduccion) throws TorqueException,DataSetException
	{
		Criteria c=new Criteria();
		c.add(ProduccionesPeer.IDPRODUCCION,idProduccion);
		c.addJoin(ProductosPeer.IDPRODUCCION,ProduccionesPeer.IDPRODUCCION);
		c.addJoin(PartesPeer.IDPRODUCTO,ProductosPeer.IDPRODUCTO);
		c.addJoin(OperariosPeer.IDOPERARIO,PartesPeer.IDOPERARIO);
		c.addJoin(TurnosPeer.IDTURNO,PartesPeer.IDTURNO);
		c.addJoin(PerfilesPeer.IDPERFIL,PerfilturnoPeer.IDPERFIL);
		c.addJoin(TurnosPeer.IDTURNO,PerfilturnoPeer.IDTURNO);		
		c.addJoin(PerfilesPeer.IDPERFIL,OperariosPeer.IDPERFIL);		
		c.addSelectColumn("SUM(" + PartesPeer.HORAS+ "*" + PerfilturnoPeer.VALORCOSTE + ")");
		java.util.List result = PerfilturnoPeer.doSelectVillageRecords(c);
		com.workingdogs.village.Record record = (com.workingdogs.village.Record) result.get(0);
		return record.getValue(1).asDouble();			
	}		

}


