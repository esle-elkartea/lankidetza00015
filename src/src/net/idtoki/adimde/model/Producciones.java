
package net.idtoki.adimde.model;


import java.util.logging.Logger;

import net.idtoki.adimde.manager.ProduccionesManager;
import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

import com.workingdogs.village.DataSetException;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Oct 26 17:10:22 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Producciones
    extends net.idtoki.adimde.model.BaseProducciones
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.adimde.model.Producciones");


		
	public String getIdproduccionProduccionesParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdproduccion() + "");
	}					

		
	public String getFechainicioProduccionesParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechainicio(),"-"));		
	}					

		
	public String getFechafinProduccionesParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechafin(),"-"));		
	}									

		
	public String getIdtipotrabajoProduccionesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getTipotrabajos().getULContentTipotrabajosParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Tipotrabajos. getIdtipotrabajoProduccionesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
	}					

		
	public String getIdestadoproduccionProduccionesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getEstadosproduccion().getULContentEstadosproduccionParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Estadosproduccion. getIdestadoproduccionProduccionesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
	}					

		
	public String getIdcentroProduccionesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getCentros().getULContentCentrosParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Centros. getIdcentroProduccionesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
	}					


	public String getPathProduccionesParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("centros") != -1)	  
	  	a = a + this.getCentros().getPathCentrosParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("tipotrabajos") != -1)	  
	  	a = a + this.getTipotrabajos().getPathTipotrabajosParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("estadosproduccion") != -1)	  
	  	a = a + this.getEstadosproduccion().getPathEstadosproduccionParsed(strQueryString) + "/";
	  a = a + this.getTipotrabajos().getNombreTipotrabajosParsed() + "_" + this.getCentros().getNombreCentrosParsed();  
	  return a;
	}

	public String getULContentProduccionesParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdproduccion() + "-" + this.getTipotrabajos().getNombreTipotrabajosParsed() + "_" + this.getCentros().getNombreCentrosParsed());	
	}	

	public String getHijosProductosProducciones()
	{
		return "<a href='#' class='hijos' id='getHijosProductosProducciones" + this.getIdproduccion() + "' title='Productos'>&#160;&#160;&#160;&#160;</a>";
	}
	
	public String getDeleteProducciones()
	{
		return "<a href='#' class='eliminar' id='getDeleteProducciones" + this.getIdproduccion() + "' title='Borrar'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditProducciones()
	{
		return "<a href='#' class='edicion' id='getEditProducciones" + this.getIdproduccion() + "' title='Editar'>&#160;&#160;&#160;&#160;</a>";
	}

	public String getCosteMaterialesProduccionesParsed() throws TorqueException,DataSetException
	{
		double coste = ProduccionesManager.getCosteMaterialesProducciones(this.getIdproduccion());
		return coste+"";
	}	
	
	public String getManoObraProduccionesParsed() throws TorqueException,DataSetException
	{
		double mo = ProduccionesManager.getManoObraProducciones(this.getIdproduccion());
		return mo+"";
	}	
}
