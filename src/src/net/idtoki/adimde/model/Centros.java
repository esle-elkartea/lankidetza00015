
package net.idtoki.adimde.model;


import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Mon Oct 02 10:34:00 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Centros
    extends net.idtoki.adimde.model.BaseCentros
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.adimde.model.Centros");


		
	public String getIdcentroCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdcentro() + "");
	}					

		
	public String getNombreCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getNombre());		
	}					

		
	public String getDireccionCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getDireccion());		
	}					

		
	public String getCpCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getCp());		
	}					

		
	public String getIdlocalidadCentrosParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getLocalidades().getULContentLocalidadesParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Localidades. getIdlocalidadCentrosParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
	}					

		
	public String getTelefonoCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getTelefono());		
	}					

		
	public String getFaxCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getFax());		
	}					

		
	public String getContactoCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getContacto());		
	}					

		
	public String getEmailCentrosParsed()
	{
		return FormatUtils.genericParsedStr(this.getEmail());		
	}					


	public String getPathCentrosParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("localidades") != -1)	  
	  	a = a + this.getLocalidades().getPathLocalidadesParsed(strQueryString) + "/";
	  a = a + this.getNombreCentrosParsed();  
	  return a;
	}

	public String getULContentCentrosParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdcentro() + "-" + this.getNombreCentrosParsed());	
	}	

	public String getHijosProduccionesCentros()
	{
		return "<a href='#' class='hijos' id='getHijosProduccionesCentros" + this.getIdcentro() + "' title='Producciones'>&#160;&#160;&#160;&#160;</a>";
	}
	
	public String getDeleteCentros()
	{
		return "<a href='#' class='eliminar' id='getDeleteCentros" + this.getIdcentro() + "' title='Borrar'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditCentros()
	{
		return "<a href='#' class='edicion' id='getEditCentros" + this.getIdcentro() + "' title='Editar'>&#160;&#160;&#160;&#160;</a>";
	}

}
