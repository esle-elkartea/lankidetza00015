
package net.idtoki.adimde.model;


import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import net.idtoki.adimde.manager.PartesManager;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

import com.workingdogs.village.DataSetException;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Mon Oct 02 10:34:00 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Partes
    extends net.idtoki.adimde.model.BasePartes
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.adimde.model.Partes");


		
	public String getIdpartePartesParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdparte() + "");
	}					

		
	public String getIdproductoPartesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getProductos().getULContentProductosParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Productos. getIdproductoPartesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
	}					

		
	public String getIdoperarioPartesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getOperarios().getULContentOperariosParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Operarios. getIdoperarioPartesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
	}					

		
	public String getIdturnoPartesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getTurnos().getULContentTurnosParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Turnos. getIdturnoPartesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
	}					

		
	public String getFechaPartesParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFecha(),"-"));		
	}					

		
	public String getDescripcionPartesParsed()
	{
		return FormatUtils.genericParsedStr(this.getDescripcion());		
	}					

		
	public String getObservacionesPartesParsed()
	{
		return FormatUtils.genericParsedStr(this.getObservaciones());		
	}					

		
	public String getHorasPartesParsed()
	{
		return FormatUtils.genericParsedStr(this.getHoras() + "");	 
	}					

		
	public String getUnidadesPartesParsed()
	{
		return FormatUtils.genericParsedStr(this.getUnidades() + "");	 
	}					


	public String getPathPartesParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("operarios") != -1)	  
	  	a = a + this.getOperarios().getPathOperariosParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("productos") != -1)	  
	  	a = a + this.getProductos().getPathProductosParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("turnos") != -1)	  
	  	a = a + this.getTurnos().getPathTurnosParsed(strQueryString) + "/";
	  a = a + this.getIdparte();  
	  return a;
	}

	public String getULContentPartesParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdparte() + "");	
	}	

	
	public String getDeletePartes()
	{
		return "<a href='#' class='eliminar' id='getDeletePartes" + this.getIdparte() + "' title='Borrar'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditPartes()
	{
		return "<a href='#' class='edicion' id='getEditPartes" + this.getIdparte() + "' title='Editar'>&#160;&#160;&#160;&#160;</a>";
	}

	public String getManoObraPartesParsed() throws TorqueException,DataSetException
	{
		double mo = PartesManager.getManoObraPartes(this.getIdparte());
		return mo+"";
	}
	
	public String getProduccionPartesParsed() throws TorqueException
	{
		return this.getProductos().getProducciones().getIdproduccion() + "--" + this.getProductos().getProducciones().getCentros().getNombreCentrosParsed() + "--" + this.getProductos().getProducciones().getTipotrabajos().getNombreTipotrabajosParsed();
	}
	
}
